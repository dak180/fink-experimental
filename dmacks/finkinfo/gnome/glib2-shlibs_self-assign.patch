diff --git a/gio/gdbusauthmechanismsha1.c b/gio/gdbusauthmechanismsha1.c
index 0b9db7f..e133d2d 100644
--- a/gio/gdbusauthmechanismsha1.c
+++ b/gio/gdbusauthmechanismsha1.c
@@ -746,7 +746,6 @@ keyring_generate_entry (const gchar  *cookie_context,
               g_strfreev (tokens);
               goto out;
             }
-          line_when = line_when; /* To avoid -Wunused-but-set-variable */
 
 
           /* D-Bus spec says:
diff --git a/gio/gdbusmessage.c b/gio/gdbusmessage.c
index 766609e..8ab33c3 100644
--- a/gio/gdbusmessage.c
+++ b/gio/gdbusmessage.c
@@ -1438,7 +1438,9 @@ parse_value_from_blob (GMemoryBuffer       *buf,
 {
   GVariant *ret;
   GError *local_error;
+#ifdef DEBUG_SERIALIZER
   gboolean is_leaf;
+#endif /* DEBUG_SERIALIZER */
   const gchar *type_string;
 
   type_string = g_variant_type_peek_string (type);
@@ -1458,7 +1460,9 @@ parse_value_from_blob (GMemoryBuffer       *buf,
 
   ret = NULL;
 
+#ifdef DEBUG_SERIALIZER
   is_leaf = TRUE;
+#endif /* DEBUG_SERIALIZER */
   local_error = NULL;
   switch (type_string[0])
     {
@@ -1641,8 +1645,8 @@ parse_value_from_blob (GMemoryBuffer       *buf,
 
           array_len = g_memory_buffer_read_uint32 (buf);
 
-          is_leaf = FALSE;
 #ifdef DEBUG_SERIALIZER
+          is_leaf = FALSE;
           g_print (": array spans 0x%04x bytes\n", array_len);
 #endif /* DEBUG_SERIALIZER */
 
@@ -1749,8 +1753,8 @@ parse_value_from_blob (GMemoryBuffer       *buf,
 
           ensure_input_padding (buf, 8);
 
-          is_leaf = FALSE;
 #ifdef DEBUG_SERIALIZER
+          is_leaf = FALSE;
           g_print ("\n");
 #endif /* DEBUG_SERIALIZER */
 
@@ -1784,8 +1788,8 @@ parse_value_from_blob (GMemoryBuffer       *buf,
         {
           ensure_input_padding (buf, 8);
 
-          is_leaf = FALSE;
 #ifdef DEBUG_SERIALIZER
+          is_leaf = FALSE;
           g_print ("\n");
 #endif /* DEBUG_SERIALIZER */
 
@@ -1819,8 +1823,8 @@ parse_value_from_blob (GMemoryBuffer       *buf,
         }
       else if (g_variant_type_is_variant (type))
         {
-          is_leaf = FALSE;
 #ifdef DEBUG_SERIALIZER
+          is_leaf = FALSE;
           g_print ("\n");
 #endif /* DEBUG_SERIALIZER */
 
@@ -1892,8 +1896,6 @@ parse_value_from_blob (GMemoryBuffer       *buf,
           g_free (s);
         }
     }
-#else
-  is_leaf = is_leaf; /* To avoid -Wunused-but-set-variable */
 #endif /* DEBUG_SERIALIZER */
 
   /* sink the reference, if floating */
diff --git a/gio/gthreadedresolver.c b/gio/gthreadedresolver.c
index c02c593..6b58c5c 100644
--- a/gio/gthreadedresolver.c
+++ b/gio/gthreadedresolver.c
@@ -398,6 +398,11 @@ typedef enum __ns_type {
 
 #endif /* __BIONIC__ */
 
+/* like NS_GET32, but ignore instead of reading/returning data */
+#define NS_SKIP32(cp) do {  \
+	(cp) += NS_INT32SZ; \
+} while (/*CONSTCOND*/0)
+
 static GVariant *
 parse_res_srv (guchar  *answer,
                guchar  *end,
@@ -533,7 +538,6 @@ g_resolver_records_from_res_query (const gchar      *rrname,
   gchar namebuf[1024];
   guchar *end, *p;
   guint16 type, qclass, rdlength;
-  guint32 ttl;
   HEADER *header;
   GList *records;
   GVariant *record;
@@ -583,8 +587,7 @@ g_resolver_records_from_res_query (const gchar      *rrname,
       p += dn_expand (answer, end, p, namebuf, sizeof (namebuf));
       GETSHORT (type, p);
       GETSHORT (qclass, p);
-      GETLONG  (ttl, p);
-      ttl = ttl; /* To avoid -Wunused-but-set-variable */
+      NS_SKIP32(p); /* ignore the ttl value */
       GETSHORT (rdlength, p);
 
       if (type != rrtype || qclass != C_IN)
diff --git a/gio/tests/httpd.c b/gio/tests/httpd.c
index 41bc6c8..9bca6c9 100644
--- a/gio/tests/httpd.c
+++ b/gio/tests/httpd.c
@@ -67,12 +67,19 @@ handler (GThreadedSocketService *service,
 
   version = NULL;
   tmp = strchr (escaped, ' ');
-  if (tmp != NULL)
+  if (tmp == NULL)
     {
-      *tmp = 0;
-      version = tmp + 1;
+      send_error (out, 400, "Bad Request");
+      goto out;
+    }
+  *tmp = 0;
+
+  version = tmp + 1;
+  if (!g_str_has_prefix (version, "HTTP/1."))
+    {
+      send_error(out, 505, "HTTP Version Not Supported");
+      goto out;
     }
-  version = version; /* To avoid -Wunused-but-set-variable */
 
   query = strchr (escaped, '?');
   if (query != NULL)
