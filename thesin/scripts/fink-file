#!/bin/bash

show_help() {
	echo;
	echo "fink-file, an apt-file wrapper for fink";
	echo "Usage: fink-file <options> <apt-file command> <term>";
	echo "e.g. : fink-file -d 10.8 -d 10.9 -a x86_64 find fink.conf";
	echo;
	echo "	-h	Display help";
	echo;
	echo "	-s	Set Sources dir, contains <dist>-<tree> source files";
	echo "		  Default: /sw/etc/apt/sources.d/";
	echo "	-d	Set dists e.g. 10.9";
	echo "		  Default: all";
	echo "	-t	Set trees e.g. stable";
	echo "		  Default: all";
	echo "	-a	Set architecture e.g. powerpc";
	echo "		  Default: all";
	echo;
}

# Reset in case getopts has been used previously in the shell.
OPTIND=1;

# Initialize our own variables:
sourcesdir="/sw/etc/apt/sources.d/";

# Set Supported dists
alldists=("10.1" "10.2" "10.2-gcc3.3" "10.3" "10.4" "10.5" "10.6" "10.7" "10.8" "10.9");

# Set Supported dists
alltrees=("stable" "unstable" "current");

# Set Supported architectures
allarchs=("powerpc" "i386" "x86_64");

while getopts ":h?vs:d:t:a:" opt; do
	case "$opt" in
		h|\?)
			show_help;
			exit 0;
			;;
		s)
			sourcesdir="${OPTARG}";
			[ "${sourcesdir:${#sourcesdir}-1}" != "/" ] && sourcesdir+="/";
			;;
		d)
			[ "${OPTARG}" != "all" ] && dists+="${OPTARG} ";
			;;
		t)
			[ "${OPTARG}" != "all" ] && trees+="${OPTARG} ";
			;;
		a)
			[ "${OPTARG}" != "all" ] && archs+="${OPTARG} ";
			;;
		:)
			echo "Option -$OPTARG requires an argument.";
			exit 1;
			;;
	esac
done

shift $((OPTIND-1));

[ "$1" = "--" ] && shift;

if [[ -z $@ ]]; then
	show_help;
	exit 0;
fi

[[ -z ${dists} ]] && dists=${alldists[*]};
[[ -z ${trees} ]] && trees=${alltrees[*]};
[[ -z ${archs} ]] && archs=${allarchs[*]};

for i in ${dists}; do
	for j in ${trees}; do
		results="";
		for h in ${archs}; do
			if [ -f ${sourcesdir}/${i}-${j} ]; then
				results=$(sudo apt-file -N -s ${sourcesdir}/${i}-${j} -a darwin-${h} ${@});

				if [ ${#results} -gt 0 ]; then
					lines=${results};
					IFS=$'\n';
					for g in ${lines}; do
						echo "${i}-${j}-darwin-${h}: ${g}";
					done;
					IFS=" ";
				fi;
			fi;
		done;
	done;	
done
