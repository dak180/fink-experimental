Package: ucf
Version: 3.0025+nmu3
Revision: 1
###
BuildDepends: dpkg (>= 1.15), po-debconf
Depends: coreutils, debconf
###
Source: mirror:debian:pool/main/u/%n/%n_%v.tar.gz
Source-MD5: a3f802fff918438dc9a05a5e29e2dc86
SourceDirectory: %n-%v
###
PatchScript: <<
perl -pi -e 's,readlink,greadlink,g' ucf
perl -pi -e 's,/usr,%p,g' examples/postinst examples/postrm lcf lcf.1 ucf ucf.1 ucf.conf ucf.conf.5 ucfq ucfq.1 ucfr ucfr.1
# fix /sw/bin/seq calls need to be /usr/bin/seq
perl -pi -e 's,%p/bin/seq,/usr/bin/seq,g' examples/postinst examples/postrm lcf lcf.1 ucf ucf.1 ucf.conf ucf.conf.5 ucfq ucfq.1 ucfr ucfr.1 
perl -pi -e 's,/etc,%p/etc,g' examples/postinst examples/postrm lcf lcf.1 ucf ucf.1 ucf.conf ucf.conf.5 ucfq ucfq.1 ucfr ucfr.1
perl -pi -e 's,/var,%p/var,g' examples/postinst examples/postrm lcf lcf.1 ucf ucf.1 ucf.conf ucf.conf.5 ucfq ucfq.1 ucfr ucfr.1

# Fix for BSD stat
perl -pi -e "s,stat -c '%%s',/usr/bin/stat -f '%%z',g" ucf
<<
CompileScript: echo
InstallScript: <<
#!/bin/sh -ev

install -d -m 0755 %i/bin
install -d -m 0755 %i/etc
install -d -m 0755 %i/share/man/man1
install -d -m 0755 %i/share/man/man5
install -d -m 0755 %i/var/lib/%n
install -d -m 0755 %i/share/doc/%n/examples
install -m 0755 ucf %i/bin
install -m 0644 ucf.1 %i/share/man/man1
install -m 0755 ucfr %i/bin
install -m 0644 ucfr.1 %i/share/man/man1
install -m 0755 ucfq %i/bin
install -m 0644 ucfq.1 %i/share/man/man1
install -m 0755 lcf %i/bin
install -m 0644 lcf.1 %i/share/man/man1
install -m 0644 ucf.conf.5 %i/share/man/man5
install -m 0644 ucf.conf %i/etc

### Debconf
#install -d -m 0755 %d/DEBIAN
#po2debconf debian/templates > debian/templates.merged
#install -m 0644 debian/templates.merged %d/DEBIAN/templates
<<
###
Debconf: <<
  TemplatesFile: %b/debian/templates
  PODirectory: %b/debian/po
<<
###
PreInstScript: <<
# preinst ---
# Author           : Manoj Srivastava ( srivasta@glaurung.green-gryphon.com )
# Created On       : Fri Nov 14 12:12:04 2003
# Created On Node  : glaurung.green-gryphon.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Nov 18 22:35:57 2003
# Last Machine Used: glaurung.green-gryphon.com
# Update Count     : 4
# Status           : Unknown, Use with caution!
# HISTORY          :
# Description      :
#
# arch-tag: d6a3672d-acb3-4f6c-9984-bad17d8ce0aa
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#

# Abort if any command returns an error value
set -e

package_name=%n

if [ -z "$package_name" ]; then
    print >&2 "Internal Error. Please report a bug."
    exit 1;
fi


statedir='%p/var/lib/ucf';

# This script is called before this version of this package is installed.
# When this script is called, the package's files have not been unpacked
# yet.

case "$1" in
  install)
    # About to install this package.
    :

    # Add a diversion.  This is one of the few things which may be done
    # before installing any files from the package.
    # dpkg-divert --package foo --add --rename \
    #             --divert /usr/bin/other.real /usr/bin/other

      echo >&2 "Moving old data out of the way"
      for i in $(seq 6 -1 0); do
	  if [ -e "${statedir}/hashfile.${i}" ]; then
	      cp -f "${statedir}/hashfile.${i}" \
		  "${statedir}/hashfile.$(($i+1))"
	  fi
      done
      if [ -e "$statedir/hashfile" ]; then
	  cp -f "$statedir/hashfile"  "$statedir/hashfile.0"
      fi

    # There are two sub-cases:
    if test "${2+set}" = set; then
      # The configuration files from version $2 of this package are
      # still on the system.
      :

    else
      # There is no existing configuration; install from scratch.
      :

    fi ;;
  upgrade)
    # About to upgrade this package from version $2 TO THIS VERSION.
    # "prerm upgrade" has already been called for the old version of
    # this package.
    :

    ;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package FROM THIS VERSION to
    # version $2.  Undo the effects of "postrm upgrade $2".
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac
<<
PostInstScript: <<
# postinst --- 
# Author           : Manoj Srivastava ( srivasta@glaurung.green-gryphon.com ) 
# Created On       : Fri Nov 14 11:25:07 2003
# Created On Node  : glaurung.green-gryphon.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Apr 11 13:20:53 2006
# Last Machine Used: glaurung.internal.golden-gryphon.com
# Update Count     : 14
# Status           : Unknown, Use with caution!
# HISTORY          : 
# Description      : 
# 
# arch-tag: 5401e9ef-39cc-4aee-96a4-61dfb8f32cf7
#  
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
# 

# Abort if any command returns an error value
set -e

package_name=%n

if [ -z "$package_name" ]; then
    print >&2 "Internal Error. Please report a bug."
    exit 1;
fi

# This script is called as the last step of the installation of the
# package.  All the package's files are in place, dpkg has already done
# its automatic conffile handling, and all the packages we depend of
# are already fully installed and configured.
# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

# The following idempotent stuff doesn't generally need protecting
# against being run in the abort-* cases.

# Install info files into the dir file
# install-info --quiet --section "section pattern" "Section Title" \
#              --description="Name of the document" %p/info/${package_name}.info

# Ensure the menu system is updated
# [ ! -x %p/bin/update-menus ] || %p/bin/update-menus

case "$1" in
  configure)
    # Configure this package.  If the package must prompt the user for
    # information, do it here.
    # Install emacs lisp files
    #if [ -x  %p/lib/emacsen-common/emacs-package-install ]; then
    #    %p/lib/emacsen-common/emacs-package-install $package_name
    #fi


    # Activate menu-methods script
    # chmod a+x %p/etc/menu-methods/${package_name}

    # Make our version of a program available
    # update-alternatives \
    #       --install %p/bin/program program %p/bin/alternative 50 \
    #       --slave %p/man/man1/program.1 program.1 \
    #               %p/man/man1/alternative.1

    # Tell ucf that the file in /usr/share/foo is the latest
    # maintainer version, and let it handle how to manage the real
    # confuguration file in /etc. This is how a static configuration
    # file can be handled:
    #if which ucf >/dev/null 2>&1; then
    #  ucf %p/share/${package_name}/configuration %p/etc/${package_name}.conf
    #fi

    touch %p/var/lib/ucf/hashfile
    touch %p/var/lib/ucf/registry

    ### We could also do this on the fly. The following is from Tore
    ### Anderson:
    
    # This package uses debconf to ask a question, so source the debconf
    # confmodule as early as possible. However, it does not depend on debconf,
    # so debconf may not be installed.
    if [ -e %p/share/debconf/confmodule ]; then
        . %p/share/debconf/confmodule
        db_capb
    fi


    ### find out what the user answered.
    #  db_get foo/run_on_boot
    #  run_on_boot=$RET
    #  db_stop

    ### safely create a temporary file to generate our suggested
    ### configuration file.
    #    tempfile=`tempfile`
    #    cat << _eof > $tempfile
    ### Configuration file for Foo.

    ### this was answered by you, the user in a debconf dialogue
    #  RUNONBOOT=$run_on_boot

    ### this was not, as it has a sane default value.
    #  COLOUROFSKY=blue

    #_eof

    ### Note that some versions of debconf do not release stdin, so
    ### the following invocation of ucf may not work, since the stdin
    ### is never coneected to ucfr.

    ### now, invoke ucf, which will take care of the rest, and ask
    ### the user if he wants to update his file, if it is modified.
    #ucf $tempfile %p/etc/foo.conf

    ### done! now we'll just clear up our cruft.
    #rm -f $tempfile



    # There are three sub-cases:
    if test "${2+set}" != set; then
      # We're being installed by an ancient dpkg which doesn't remember
      # which version was most recently configured, or even whether
      # there is a most recently configured version.
      :

    elif test -z "$2" || test "$2" = "<unknown>"; then
      # The package has not ever been configured on this system, or was
      # purged since it was last configured.
      :

    else
      # Version $2 is the most recently configured version of this
      # package.
      :

    fi ;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package FROM THIS VERSION
    # to version $2.  Undo the effects of "prerm upgrade $2".
    :

    ;;
  abort-remove)
    if test "$2" != in-favour; then
      echo "$0: undocumented call to \`postinst $*'" 1>&2
      exit 0
    fi
    # Back out of an attempt to remove this package, which was due to
    # a conflict with package $3 (version $4).  Undo the effects of
    # "prerm remove in-favour $3 $4".
    :

    ;;
  abort-deconfigure)
    if test "$2" != in-favour || test "$5" != removing; then
      echo "$0: undocumented call to \`postinst $*'" 1>&2
      exit 0
    fi
    # Back out of an attempt to deconfigure this package, which was
    # due to package $6 (version $7) which we depend on being removed
    # to make way for package $3 (version $4).  Undo the effects of
    # "prerm deconfigure in-favour $3 $4 removing $6 $7".
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac

# Install doc base documentation
#if which install-docs >/dev/null 2>&1; then
#  if [ -e %p/share/doc-base/${package_name} ]; then
#    install-docs -i %p/share/doc-base/${package_name}
#  fi
#fi
<<
PostRmScript: <<
# postrm --- 
# Author           : Manoj Srivastava ( srivasta@glaurung.green-gryphon.com ) 
# Created On       : Fri Nov 14 12:22:20 2003
# Created On Node  : glaurung.green-gryphon.com
# Last Modified By : Manoj Srivastava
# Last Modified On : Tue Apr 11 13:20:24 2006
# Last Machine Used: glaurung.internal.golden-gryphon.com
# Update Count     : 12
# Status           : Unknown, Use with caution!
# HISTORY          : 
# Description      : 
# 
# arch-tag: 56802d51-d980-4822-85c0-28fce19ed430
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
# 


# Abort if any command returns an error value
set -e

package_name=%n

if [ -z "$package_name" ]; then
    print >&2 "Internal Error. Please report a bug."
    exit 1;
fi

# This script is called twice during the removal of the package; once
# after the removal of the package's files from the system, and as
# the final step in the removal of this package, after the package's
# conffiles have been removed.
# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# Ensure the menu system is updated
# [ ! -x %p/bin/update-menus ] || %p/bin/update-menus

case "$1" in
  remove)
    # This package is being removed, but its configuration has not yet
    # been purged.
    :

    # Remove diversion
    # dpkg-divert --package ${package_name} --remove --rename \
    #             --divert %p/bin/other.real %p/bin/other

    # ldconfig is NOT needed during removal of a library, only during
    # installation

    ;;
  purge)
    # This package has previously been removed and is now having
    # its configuration purged from the system.

    # we mimic dpkg as closely as possible, so we remove configuration
    # files with dpkg backup extensions too:
    ### Some of the following is from Tore Anderson:
    # for ext in '~' '%' .bak .dpkg-tmp .dpkg-new .dpkg-old .dpkg-dist;  do
    #     rm -f %p/etc/${package_name}.conf$ext
    # done
 
    # remove the configuration file itself
    # rm -f %p/etc/${package_name}.conf

      rm -f %p/var/lib/ucf/hashfile
      rm -f %p/var/lib/ucf/hashfile.*
      rm -f %p/var/lib/ucf/registry
      rm -f %p/var/lib/ucf/registry.*
      if [ -d %p/var/lib/ucf/cache ]; then
          find %p/var/lib/ucf/cache -type f -print0 | xargs -0r rm -f
          rmdir %p/var/lib/ucf/cache 1>&2 || true
      fi

    # and finally clear it out from the ucf database
    # ucf --purge %p/etc/${package_name}.conf

    if [ -e %p/share/debconf/confmodule ]; then
        # Purge this package's data from the debconf database.
        . %p/share/debconf/confmodule
        db_purge
    fi

    # This package has previously been removed and is now having
    # its configuration purged from the system. 
    # for flavour in emacs20 emacs21; do
    #     STARTDIR=%p/etc/$flavour/site-start.d;
    #     STARTFILE="${package_name}-init.el";
    #     if [ -e "$STARTDIR/20$STARTFILE" ]; then
    #         rm -f "$STARTDIR/20$STARTFILE"
    #     fi
    # done

    ;;
  disappear)
    if test "$2" != overwriter; then
      echo "$0: undocumented call to \`postrm $*'" 1>&2
      exit 0
    fi
    # This package has been completely overwritten by package $3
    # (version $4).  All our files are already gone from the system.
    # This is a special case: neither "prerm remove" nor "postrm remove"
    # have been called, because dpkg didn't know that this package would
    # disappear until this stage.
    :

    ;;
  upgrade)
    # About to upgrade FROM THIS VERSION to version $2 of this package.
    # "prerm upgrade" has been called for this version, and "preinst
    # upgrade" has been called for the new version.  Last chance to
    # clean up.
    :

    ;;
  failed-upgrade)
    # About to upgrade from version $2 of this package TO THIS VERSION.
    # "prerm upgrade" has been called for the old version, and "preinst
    # upgrade" has been called for this version.  This is only used if
    # the previous version's "postrm upgrade" couldn't handle it and
    # returned non-zero. (Fix old postrm bugs here.)
    :

    ;;
  abort-install)
    # Back out of an attempt to install this package.  Undo the effects of
    # "preinst install...".  There are two sub-cases.
    :

    if test "${2+set}" = set; then
      # When the install was attempted, version $2's configuration
      # files were still on the system.  Undo the effects of "preinst
      # install $2".
      :

    else
      # We were being installed from scratch.  Undo the effects of
      # "preinst install".
      :

    fi ;;
  abort-upgrade)
    # Back out of an attempt to upgrade this package from version $2
    # TO THIS VERSION.  Undo the effects of "preinst upgrade $2".
    :

    ;;
  *) echo "$0: didn't understand being called with \`$1'" 1>&2
     exit 0;;
esac
<<
ConfFiles: %p/etc/ucf.conf
DocFiles: ChangeLog COPYING examples
Description: Update Configuration File: preserve changes
DescDetail: <<
Debian/Fink policy mandates that user changes to configuration files must be 
preserved during package upgrades. The easy way to achieve this behavior is to
make the configuration file a 'conffile', in which case dpkg handles the file
specially during upgrades, prompting the user as needed.
.
This is appropriate only if it is possible to distribute a default version that
will work for most installations, although some system administrators may
choose to modify it. This implies that the default version will be part of the
package distribution, and must not be modified by the maintainer scripts during
installation (or at any other time). 
.
This script attempts to provide conffile-like handling for files that may not
be labelled conffiles, and are not shipped in a Debian package, but handled by
the postinst instead. This script allows one to maintain files in %p/etc,
preserving user changes and in general offering the same facilities while
upgrading that dpkg normally provides for 'conffiles'.
.
Additionally, this script provides facilities for transitioning a file that had
not been provided with conffile-like protection to come under this schema, and
attempts to minimize questions asked at installation time. Indeed, the
transitioning facility is better than the one offered by dpkg while
transitioning a file from a non-conffile to conffile status.
<<
License: GPL
Maintainer: Justin F. Halett <thesin@lists.sourceforge.net>
Homepage: http://packages.debian.org/unstable/debsums
