Package: ppl
Version: 0.11
Revision: 1
# Distribution: 10.5, 10.6
BuildDependsOnly: True
Depends: %N-shlibs (= %v-%r)
BuildDepends: <<
	fink (>= 0.28),
	gmp (>= 4.2.4-1000),
	m4,
	system-java-dev
<<
# BuildDepends: gcc4.2
GCC: 4.0
# SetCC: gcc-4.2
# SetCXX: g++-4.2
Source: ftp://ftp.cs.unipr.it/pub/%n/releases/%v/%n-%v.tar.bz2
Source-MD5: c414abd2ecaf1f1f48949c78d383ee1a
ConfigureParams: <<
	--mandir=%p/share/man \
	--infodir=%p/share/info \
	--disable-static \
	--enable-pch \
	CFLAGS="-g -O2 -fpch-preprocess" \
	CXXFLAGS="-g -O2 -fpch-preprocess" \
	--enable-check=thorough \
	-C
<<
PatchScript: <<
	#!/bin/sh -ev
	# g++-4.0.1 rejects template instantiating w/ anonymous enums -- fangism
	# this was fixed in ppl-0.11; the following patch doesn't do anything
	# file=src/meta_programming.hh
	# sed -i.orig -e '/struct Bool/,/^};/s|enum {|enum value_type {|' $file
<<
CompileScript: <<
	#!/bin/sh -ev
	mkdir build
	cd build
	if [ -e /usr/libexec/java_home ]; then
		../configure %c --with-java=`/usr/libexec/java_home`
	else
		../configure %c
	fi
	# test for ccache-default
	if test -x %p/bin/gcc
	then
		export CCACHE_SLOPPINESS=time_macros
	fi
	make
<<
InfoTest: <<
	TestScript: <<
	#!/bin/sh -ev
	cd build
	if test -x %p/bin/gcc
	then
		export CCACHE_SLOPPINESS=time_macros
	fi
	# make -k check || exit 2
	make check || exit 2
	<<
	TestDepends: glpk-dev
	TestSuiteSize: large
<<
InstallScript: <<
	#!/bin/sh -ev
	cd build
	make install DESTDIR=%d
<<
DocFiles: <<
	BUGS
	COPYING
	CREDITS
	ChangeLog*
	INSTALL
	NEWS
	README*
	STANDARDS
	TODO
<<
SplitOff: <<
  Package: %N-shlibs
  Depends: <<
	gmp-shlibs (>= 4.2.4-1000),
	libgmpxx-shlibs (>= 4.2.4-1000)
  <<
  Files: <<
    %p/lib/libppl.9*.dylib
    %p/lib/libppl_c.4*.dylib
    %p/lib/libpwl.5*.dylib
    %p/lib/ppl
  <<
  Shlibs: <<
    %p/lib/libppl.9.dylib 10.0.0 %n (>= 0.11-1)
    %p/lib/libppl_c.4.dylib 5.0.0 %n (>= 0.11-1)
    %p/lib/libpwl.5.dylib 6.0.0 %n (>= 0.11-1)
    !%p/lib/ppl/libppl_java.jnilib
  <<
<<
License: GPL
Description: Parma Polyhedra Library
DescDetail: <<
The Parma Polyhedra Library (PPL) is a C++ library for the 
manipulation of (not necessarily closed) convex polyhedra 
and other numerical abstractions. The applications of convex 
polyhedra include program analysis, optimized compilation, 
integer and combinatorial optimization and statistical 
data-editing. The Parma Polyhedra Library is user friendly 
(you write `x + 2*y + 5*z <= 7' when you mean it), fully 
dynamic (available virtual memory is the only limitation 
to the dimension of anything), written in standard C++, 
exception-safe, rather efficient and thoroughly documented.
<<
DescPackaging: <<
Reminder to never move %p/lib/ppl from ppl-shlibs since it
brings over private .la as well as private shared lib.

Added CompileScript to deal with Apple's new java.

Initial packaging by Jack Howarth <howarth@bromo.med.uc.edu>.

fangism turned on use of precompiled headers and ccache-default support.
<<
DescPort: <<
Issues was raised about g++-4.0.1 compile failing:
http://www.cs.unipr.it/pipermail/ppl-devel/2008-August/012001.html
fangism patched up the offending lines of C++ in PatchScript for 10.4.
<<
Homepage: http://www.cs.unipr.it/ppl
Maintainer: David Fang <fangism@users.sourceforge.net>

