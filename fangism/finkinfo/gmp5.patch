--- gmp-5.1.0-RC2/mpn/x86_64/mod_34lsub1.asm.orig	2012-12-10 18:55:50.000000000 -0500
+++ gmp-5.1.0-RC2/mpn/x86_64/mod_34lsub1.asm	2012-12-10 18:56:07.000000000 -0500
@@ -102,21 +102,23 @@
 	sub	$eval(UNROLL*3), %rsi
 	jnc	L(top)
 
-L(end):	LEA(	L(tab), %r8)
-	movslq	36(%r8,%rsi,4), %r10
-	lea	(%r10, %r8), %r8
-	jmp	*%r8
-
-	RODATA
-L(tab):	.long	L(0)-L(tab)
-	.long	L(1)-L(tab)
-	.long	L(2)-L(tab)
-	.long	L(3)-L(tab)
-	.long	L(4)-L(tab)
-	.long	L(5)-L(tab)
-	.long	L(6)-L(tab)
-	.long	L(7)-L(tab)
-	.long	L(8)-L(tab)
+L(end):
+C Handle 0-8 remaining limbs.  The switch code here is zany in an attempt to
+C fit the tiny envelope of code that triggers no Apple bugs
+	lea	L(tab)(%rip), %r8
+	jmp	*72(%r8,%rsi,8)
+	
+	JUMPTABSECT
+	ALIGN(8)
+L(tab):	.quad	L(0)
+	.quad	L(1)
+	.quad	L(2)
+	.quad	L(3)
+	.quad	L(4)
+	.quad	L(5)
+	.quad	L(6)
+	.quad	L(7)
+	.quad	L(8)
 
 	TEXT
 L(6):	add	(ap), %rax
