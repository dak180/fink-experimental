Package: glib2-shlibs

#fails self-tests:(
#backwards-incompatible/ABI break (see bug #780309 in DescPackaging)
Version: 2.52.0

Revision: 1
BuildDepends: <<
	fink (>= 0.32),
	gettext-bin,
	gettext-tools,
	libffi6,
	libgettext8-dev,
	libiconv-dev,
	libxml2-bin,
	libpcre1,
	pykg-config
<<
Depends: <<
	dbus (>= 1.8.2-1),
	libffi6-shlibs,
	libgettext8-shlibs,
	libiconv,
	libpcre1-shlibs,
	xdg-base (>= 0.8-1)
<<
Recommends: <<
	desktop-file-utils (>= 0.23-1),
	shared-mime-info (>= 1.6-1)
<<
Replaces: glib2 (<< 2.12.0-1)
Source: mirror:gnome:sources/glib/2.52/glib-%v.tar.xz
Source-MD5: 64283e546091dcf3c9837d5430dda022
#Source2: mirror:debian:pool/main/g/glib2.0/glib2.0_2.50.2-1.debian.tar.xz
#Source2-MD5: c2b2bb2b13cfc3ac728ec67395c4951f
PatchFile: %n.patch
PatchFile-MD5: 79b44e02c4291d343b08453aab6c95c1

# clean up some warnings. See:
# https://bugzilla.gnome.org/show_bug.cgi?id=745723
PatchFile2: %n_self-assign.patch
PatchFile2-MD5: 1897887928ed443727c91ee343b55dff

PatchScript: <<
	sed 's,@PREFIX@,%p,g' < %{PatchFile} | patch -p1
	# TODO: gnome's patchset looks interesting
	patch -p1 < %{PatchFile2}

	# Regenerating gtk-doc files The Right Way (--enable-gtk-doc)
	# is very slow and glib2-shlibs:BuildDepends:gtk-doc causes a
	# dependency loop (work hard to avoid using it even if
	# present!), so just patch the prefix in the bad URLs in the
	# existing generated files.
	# different versions have pre-built at different prefixes:(
	# perl -pi -e 's,/usr/share/gtk-doc/html,%p/share/gtk-doc/html,g' docs/reference/*/html/*.html
	perl -pi -e 's,"/.*?/gtk-doc/html,"%p/share/gtk-doc/html,g' docs/reference/*/html/*.html

	perl -pi -e 's/-version-info/-no-undefined -version-info/' */Makefile.in

	# Some tests require GNU du. See:
	# https://bugzilla.gnome.org/show_bug.cgi?id=769398
	perl -pi -e 's/"du/"gdu/g' gio/tests/file.c
<<
SetCFLAGS: -Os
ConfigureParams: <<
	--disable-gtk-doc \
	ac_cv_path_GTKDOC_REBASE=true \
	--enable-dependency-tracking \
	--disable-fam \
	--disable-man \
	--disable-libelf \
	--with-python=/usr/bin/python \
	PKG_CONFIG=%p/bin/pykg-config \
	PERL_PATH=/usr/bin/perl \
	PERL=/usr/bin/perl \
	DBUS_DAEMON=disabling-for-fink-packaging-build \
	--with-xml-catalog="$XML_CATALOG_FILES"
<<
CompileScript: <<
	./configure %c
	make
<<
InfoTest: <<
	TestDepends: <<
		coreutils,
		dbus1.3-dev (>= 1.8.2-1),
		desktop-file-utils (>= 0.23-1),
		shared-mime-info (>= 1.6-1)
	<<
	TestScript: <<
	#!/bin/sh -ev

		# Fink handles the env, but glib/tests/mappedfile (and
		# maybe others?) use XDG_RUNTIME_DIR, which is
		# user-specific. Need to make sure we get the user
		# running this script, not root (running fink itself).
		# Is this is a fink bug?
		set +v
		# Don't need to see verbose output of init.sh itself
		# (so +v for this stage) but that mode even hides the
		# loading of that file and the command to return to
		# -v. Hack so at least logfile makes sense...
		echo ". %p/bin/init.sh"
		. %p/bin/init.sh
		echo "set -v"
		set -v

		# For discussion of way to disable some tests, see:
		# https://bugzilla.gnome.org/show_bug.cgi?id=769135

		# Some pollable/ tests hang...sometimes (mostly at
		# times of low system-load?)...but never fails
		# otherwise; disabling for now.
		export DISABLE_pollable_unix_TEST=1
		export DISABLE_pollable_converter_TEST=1

		# The refcount tests take several hours and pass
		# reliably, disabling for now because they hide the
		# actual failures.
		perl -pi -e 's/refcount// if /^SUBDIRS/' tests/Makefile

		# A test in glib/tests/spawn-singlethread fails
		# "sometimes". Disabling for now. See:
		# https://bugzilla.gnome.org/show_bug.cgi?id=731367
		export DISABLE_gthread_spawn_script_TEST=1

		# appmonitor 1 /monitor/app fails due to something
		# related to fink-bld's XDG_DATA_DIRS. Sometimes.

		# One part of /fileutils/stdio-wrappers fails if path
		# to builddir has any symlinks. See:
		# https://bugzilla.gnome.org/show_bug.cgi?id=731695

		# testfilemonitor fails. See.
		# https://bugzilla.gnome.org/show_bug.cgi?id=768550

		# unix-fd fails. See:
		# https://bugzilla.gnome.org/show_bug.cgi?id=745856

		# /file/async-create-delete/* fail. See:
		# https://bugzilla.gnome.org/show_bug.cgi?id=659306
		export DISABLE_file_async_create_delete_TEST=1

		make check -j 1 -k || exit 2
	<<
<<
InstallScript: <<
	make install DESTDIR=%d

	find %i/share/gdb
	find %i/share/glib-2.0/gdb
	rm -rf %i/share/gdb %i/share/glib-2.0/gdb

	perl -ni -e 'print unless /Libs.private:/' %i/lib/pkgconfig/*.pc

	mkdir -p %i/lib/glib-2.0/pkgconfig-strict
	perl -p -e 's/-lintl//g' %i/lib/pkgconfig/glib-2.0.pc > %i/lib/glib-2.0/pkgconfig-strict/glib-2.0.pc

	# conflict between glib-{dev,shlibs} prevents installation of
	# the .deb (keeps this .info from escaping into the wild)
	mkdir -p %i/share/doc/installed-packages && touch %i/share/doc/installed-packages/glib2-beta
<<
Shlibs: <<
	%p/lib/libgio-2.0.0.dylib 5001.0.0 %n (>= 2.50.0-1)
	%p/lib/libglib-2.0.0.dylib 5001.0.0 %n (>= 2.50.0-1)
	%p/lib/libgmodule-2.0.0.dylib 5001.0.0 %n (>= 2.50.0-1)
	%p/lib/libgobject-2.0.0.dylib 5001.0.0 %n (>= 2.50.0-1)
	%p/lib/libgthread-2.0.0.dylib 5001.0.0 %n (>= 2.50.0-1)
<<
DocFiles: <<
	AUTHORS
	docs/reference/AUTHORS:AUTHORS.docs.reference
	gmodule/AUTHORS:AUTHORS.gmodule
	ChangeLog*
	docs/reference/ChangeLog:ChangeLog.docs.reference
	gio/ChangeLog:ChangeLog.gio
	gmodule/ChangeLog:ChangeLog.gmodule
	gobject/ChangeLog:ChangeLog.gobject
	gthread/ChangeLog:ChangeLog.gthread
	po/ChangeLog:ChangeLog.po
	COPYING NEWS README
<<
SplitOff: <<
	Package: glib2-dev
	Depends: <<
		dpkg-base-files,
		glib2-shlibs (= %v-%r),
		libgettext8-shlibs,
		libiconv
	<<
	Description: Handy library of utility functions
	Replaces: glib2 (<< 2.18.4-2)
	BuildDependsOnly: True
	Files: <<
		bin
		include
		lib/glib-2.0
		lib/lib*-2.0.{dylib,la}
		lib/pkgconfig
		share/aclocal
		share/glib-2.0
		share/gtk-doc
		share/man
	<<
	InstallScript: mkdir -p %i/share/doc/installed-packages && touch %i/share/doc/installed-packages/glib2-beta
	DocFiles: <<
		AUTHORS
		docs/reference/AUTHORS:AUTHORS.docs.reference
		gmodule/AUTHORS:AUTHORS.gmodule
		ChangeLog*
		docs/reference/ChangeLog:ChangeLog.docs.reference
		gio/ChangeLog:ChangeLog.gio
		gmodule/ChangeLog:ChangeLog.gmodule
		gobject/ChangeLog:ChangeLog.gobject
		gthread/ChangeLog:ChangeLog.gthread
		po/ChangeLog:ChangeLog.po
		COPYING NEWS README
	<<
	DescUsage: <<
Other packages may need to pass explicit -lintl when linking. glib2
used to publish this flag via .pc and .la, so others' sloppiness
previously had no visible effect. As of 2.22.4-2, the default
glib-2.0.pc does still contain that flag whereas the one in
%p/lib/glib-2.0/pkgconfig-strict does not. Packages should test with
that path in their PKG_CONFIG_PATH and add explicit flag-passing if it
fails in order to prepare for the future when the default .pc may not
have that flag.
	<<
<<
Description: Handy library of utility functions
DescPort: <<
	glib2 provides etc/glib-2.0/charset.alias for darwin because there's
	no system-wide charset.alias.
	See also: http://bugzilla.gnome.org/show_bug.cgi?id=346816
	Can we figure out how to generate this (gettext-tools config.charset
	for host=darwin5?) or import it from an authoritative upstream source
	instead of dragging along a legacy file in %N.patch?

	check uses some C++ but it doesn't leak out into the installed
	package

	We need to set LANG=C when doing 'make check', else a previously
	installed glib2 will trigger a crash caused by a bug in the old
	de.po. See http://bugzilla.gnome.org/show_bug.cgi?id=310731
	Need to figure out how to patch tests/Makefile to use the nascent
	gettext dictionaries in preference to installed ones.

	#Need to patch gutils.h for inline semantics of gcc on OS X >= 10.5.
	#gcc version is not sufficient to determine it (appears to be xcode-
	#specific patches to gcc), so test Apple gcc build number. See:
	#http://bugzilla.gnome.org/show_bug.cgi?id=315437 (patch #96366 does
	#not work...not __GNUC_PREREQ). No idea a portable solution, but
	#msachs says "static inline" is right for this case, so hardcode it.
	#2.14.5 does it "differently" but still looks like the same wrong
	#patch, so leaving our existing "static inline" hard-coding patch.
	^-- it's been so many OSX/xcode versions, let's try not doing
	this anymore and see if anything breaks

	Fix glib/gslice.c clobbering of errno.
	See: http://bugzilla.gnome.org/show_bug.cgi?id=554092
	(patch from comments #14)

	gdbus does not support launchd, so it cannot find or launch
	buses. See: https://bugzilla.gnome.org/show_bug.cgi?id=690523
	Therefore disabling all tests that need to start a daemon.
	See also:
	https://trac.macports.org/browser/trunk/dports/devel/glib2/files/patch-get-launchd-dbus-session-address.diff

	gio/gdesktopappinfo.c omitted on OS X but replacement gosx*.c
	appear not to supply full API equivalent, leading to build
	failures in gio/tests/:
		appinfo
		desktop-app-info
	and test-failures in gio/tests/:
		async-splice-output-stream
		contexts
		converter-stream
		gsubprocess
		g-file
		g-icon
		io-stream
		network-monitor
		pollable
		proxy-test
		readwrite
		socket-service
		vfs
		testfilemonitor
		tls-certificate
		file
		live-g-file
		autoptr
		resources
		gsettings
	See: https://bugzilla.gnome.org/show_bug.cgi?id=780309
	Considering this a blocker for fink for now since it looks
	like a broken ABI (these symbols previously existed)

	gio/tests/contenttype fails because of mixing of OSX and unix
	filetype terminology for same concepts. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=780384
<<
DescPackaging: <<
	Library contains some C symbols whose real name looks like C++
	munges. This should not be construed to mean that glib2 is C++ nor
	that it needs to obey Fink C++ packaging rules. C++ is also
	used in some self-tests.

	Prior to 2.12.0-1, %N contained the gettext catalogs and the
	charset.alias file, which are used by the %N-shlibs files. Starting
	in 2.12.0-1, they are all now in the %N-shlibs package, and %N is a
	dummy for compatibility and upgrades.
	More recently, %N was nuked entirely.

	Disable the FAM plugin for gio. Darwin doesn't have libfam.
	Fink has gamin, a third-party implementation available in
	fink, has a dependency on glib. Eventually package gio-fam
	separately to avoid circular dependency. But even if compiled
	and installed, gio-directory-monitoring doesn't work (does not
	detect dir creation/renaming/deletion or contained-file
	creation/deletion) so better to leave it out--gives runtime
	"Unable to find default local directory monitor type"
	diagnostic rather than silent non-workingness. Really should
	get a native file/directory monitor implementation, maybe
	using kqueue or FSEvents. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=543148

	libgio sometimes runs %p/bin/update-desktop-database from the
	desktop-file-utils package or %p/bin/update-mime-database from
	the shared-mime-info package, but those programs link against
	libglib. Leave it as %N-shlibs:Recommends:... to break the
	circular dependency. Ick. Required for self-test, so would
	need to build (but not test) glib2, then build d-f-u & s-m-i
	against it, then rebuild glib2 with testing enabled. Ick^2.

	Make sure the update-*-database programs can be found even if
	run from a non-fink'ed shell: explicit path and fink XDG vars.
	See also: https://bugzilla.gnome.org/show_bug.cgi?id=673135

	Don't install gdb files. They aren't named correctly and it's
	not clear they are usable on darwin. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=606877
	Also, they don't even get installed in the correct location.
	See: https://bugzilla.gnome.org/show_bug.cgi?id=606872

	All libs are shared-only and all symbols are resolved via dyld
	so do not export dependencies' -l flags in via pkg-config.
	Reduces BuildDepends inheritance of things that are not in
	public interface.

	Cannot run some tests in fink-bld sandbox because monitor
	daemon is owned by logged in user, or at all because we don't
	have a functional gvfs-hal-volume-monitor or similar
	mechanism:
	  gio/tests/volumemonitor
	  gio/tests/file
	  gio/tests/monitor

	Fink's elf-0.8.9-2 is not sufficient and elf is not necessary,
	so disable its detection.

	Using pykg-config instead of pkg-config at build-time to break
	dependency loop. The compiled pkg-config program uses glib, so
	it's better to have it use fink's actual (patched, tested,
	etc.) one than embedding its own cloned code fragments from
	glib upstream.

	Appears to detect carbon even though that's not really viable
	on 64-bit. Leads to FSFindFolder deprecation warning. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=731313

	tests/run-assert-msg-test.sh needs to use apple's gdb
	(codesigned) in order to run as non-root, and even then,
	requires password via UI.

	Patch glib/tests/gdatetime.c to avoid HAVE_CARBON proxy. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=731625

	Patch gio/tests/modules/Makefile.in to build modules. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=731703

	Patch gio/tests/desktop-files/home/applications/*.desktop to
	avoid hardcoding path to "true". See:
	https://bugzilla.gnome.org/show_bug.cgi?id=731705

	Tarball has pregenerated manpages, so short-circuit autotools
	logic that supresses them if their build-tools are not
	available (avoid BDeps) even if not need to generated them.
	See: https://bugzilla.gnome.org/show_bug.cgi?id=750819

	Not fixing unused-variable warnings in glib/tests/autoptr.c
	pending upstream advice. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=751738

	XML catalog path check (acinclude.m4:JH_PATH_XML_CATALOG,
	taken from gtk-doc) doesn't consider libxml's documented env
	var that fink uses, and libxml doesn't provide a way to
	interrogate its own default. Just hard-code our default
	because gtk-doc doesn't want to follow the env var. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=683554

	Omit utf8_encode (silences unused-function warning). See:
	https://bugzilla.gnome.org/show_bug.cgi?id=780306

	Fix 10.10+-specific code-branch in gosxappinfo.c. See:
	https://bugzilla.gnome.org/show_bug.cgi?id=780300
<<
License: LGPL
Maintainer: The Gnome Core Team <fink-gnome-core@lists.sourceforge.net>
Homepage: http://www.gtk.org
