--- libtorrent-0.12.9-orig/rak/allocators.h	2011-06-21 22:37:15.000000000 -0700
+++ libtorrent-0.12.9/rak/allocators.h	2011-06-21 22:42:44.000000000 -0700
@@ -77,8 +77,15 @@
 
   static pointer alloc_size(size_type size) {
     pointer ptr = NULL;
+#ifdef	HAVE_POSIX_MEMALIGN
     int __UNUSED result = posix_memalign((void**)&ptr, LT_SMP_CACHE_BYTES, size);
 
+#elif	defined(__APPLE__)
+	// apple-darwin's malloc is already Altivec-aligned (16B)
+	ptr = static_cast<pointer>(malloc(size));
+#else
+#error	"Missing equivalent of posix_memalign()."
+#endif
     return ptr;
   }
 
--- libtorrent-0.12.9-orig/src/torrent/thread_base.h	2011-06-21 23:12:25.000000000 -0700
+++ libtorrent-0.12.9/src/torrent/thread_base.h	2011-06-21 23:33:19.000000000 -0700
@@ -37,6 +37,19 @@
 #ifndef LIBTORRENT_THREAD_BASE_H
 #define LIBTORRENT_THREAD_BASE_H
 
+#if (__GNUC__ < 4 || (__GNUC__ == 4 && __GNUC_MINOR__ < 2))
+#if defined(__APPLE__)
+#define	USE_DARWIN_ATOMICS
+#endif
+#endif
+
+#ifdef	USE_DARWIN_ATOMICS
+#include <libkern/OSAtomic.h>
+#define	__sync_add_and_fetch(x, y)	OSAtomicIncrement32Barrier(x)
+#define	__sync_sub_and_fetch(x, y)	OSAtomicDecrement32Barrier(x)
+#define	__sync_lock_test_and_set(x, y)	OSAtomicTestAndSetBarrier(y, x)
+#endif
+
 #include <pthread.h>
 #include <sys/types.h>
 #include <torrent/common.h>
--- libtorrent-0.12.9-orig/src/net/socket_set.h	2011-06-26 21:28:11.000000000 -0700
+++ libtorrent-0.12.9/src/net/socket_set.h	2011-06-26 21:28:56.000000000 -0700
@@ -53,12 +53,12 @@
 
 // Propably should rename to EventSet...
 
-class SocketSet : private std::vector<Event*, rak::cacheline_allocator<> > {
+class SocketSet : private std::vector<Event*, rak::cacheline_allocator<Event*> > {
 public:
   typedef uint32_t    size_type;
 
-  typedef std::vector<Event*, rak::cacheline_allocator<> > base_type;
-  typedef std::vector<size_type, rak::cacheline_allocator<> > Table;
+  typedef std::vector<Event*, rak::cacheline_allocator<Event*> > base_type;
+  typedef std::vector<size_type, rak::cacheline_allocator<size_type> > Table;
 
   static const size_type npos = static_cast<size_type>(-1);
 
